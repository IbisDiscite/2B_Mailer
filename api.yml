#Test with: http://editor.swagger.io/

swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Grades
  description: Nodejs + MongoDB
  license:
    name: Software Architecture 2018-I
host: 35.185.99.56:4003
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /messages:
    post:
      summary: Creates a new message
      operationId: createmessage
      parameters:
        - name: message
          in: body
          required: true
          description: Message Object
          schema:
            $ref: '#/definitions/MessageInput'
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all messages
      operationId: getAllMessages
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/MessagesList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /messages/{id}:
    get:
      summary: Returns a message with the given id
      operationId: getMessageById
      parameters:
        - name: id
          in: path
          description: The id of the message to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Message'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

#    put:
#      summary: Updates a grade with the given id
#      operationId: updateGrade
#      parameters:
#        - name: id
#          in: path
#          description: The id of the grade to be updated
#          required: true
#          type: integer
#        - name: grade
#          in: body
#          required: true
#          description: Grade Object
#          schema:
#            $ref: '#/definitions/GradeInput'
#      responses:
#        '204':
#          description: No Content
#        '404':
#          description: Not Found
#          schema:
#            $ref: '#/definitions/ErrorModel'
#        '406':
#            description: Not Acceptable (Invalid Params)
#            schema:
#              $ref: '#/definitions/ErrorModel'
#        '500':
#          description: unexpected error
#          schema:
#            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a message with the given id
      operationId: deleteMessage
      parameters:
        - name: id
          in: path
          description: The id of the message to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
            description: Not Acceptable (Invalid Params)
            schema:
              $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Messages
  Message:
    type: object
    properties:
      id:
        type: integer
      subject:
        type: string
      text:
        type: string

  MessageInput:
    type: object
    properties:
      subject:
        type: string
      text:
        type: string

  MessagesList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Message'

# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object